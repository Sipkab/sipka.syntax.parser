global(VERSION_sipka.syntax.parser) = "0.8.0"

compile(
	out javac,
) {
	$javac = saker.java.compile(
		SourceDirectories: src,
	)
	
}
export(
	out compile = include(compile),
	out jar,
	out sourcejar,
	
	out bundlepaths = [
		$jar[Path],
		$sourcejar[Path],
	]
){
	$jar = saker.jar.create(
		Output: sipka.syntax.parser.jar,
		Resources: [
			{
				Resources: **/*.class, 
				Directory: $compile[javac][ClassDirectory],
			}
		],
		Manifest: {
			MainAttributes: {
				Nest-Bundle-Format-Version: 1,
				Nest-Bundle-Identifier: "sipka.syntax.parser-v{ global(VERSION_sipka.syntax.parser) }",
				Nest-Bundle-Source: "sipka.syntax.parser-sources-v{ global(VERSION_sipka.syntax.parser) }",
			},
		},
	)
	$sourcejar = saker.jar.create(
		Output: sipka.syntax.parser-sources.jar,
		Resources: [
			{
				Directory: src,
				Resources: **/*.java,
			},
		],
		Manifest: {
			MainAttributes: {
				Nest-Bundle-Format-Version: 1,
				Nest-Bundle-Identifier: "sipka.syntax.parser-sources-v{ global(VERSION_sipka.syntax.parser) }",
			},
		},
	)
}
install(){
	$export = include(export)
	nest.local.install(Bundle: $export[bundlepaths])
}
upload(){
	$export = include(export, Path: saker.build)
	include(Path: secret/secrets.build)
	nest.server.upload(
		Bundles: $export[bundlepaths],
		APIKey: global(sipka.syntax.parser.UPLOAD_API_KEY),
		APISecret: global(sipka.syntax.parser.UPLOAD_API_SECRET),
		Overwrite: true,
	)
}